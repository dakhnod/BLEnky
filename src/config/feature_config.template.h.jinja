#ifndef FEATURE_CONFIG_H
#define FEATURE_CONFIG_H

#define APP_TIMER_PRESCALER 0

#define FEATURE_ENABLED(feature) FEATURE_##feature##_ENABLED == 1

// <<< Use Configuration Wizard in Context Menu >>>

// <h>GPIO configuration

// <o>Max gpio input count <0-32> <f.d>
#ifndef GPIO_INPUT_COUNT_MAX
#define GPIO_INPUT_COUNT_MAX 8
#endif

// <o>Max gpio output count <0-32> <f.d>
#ifndef GPIO_OUTPUT_COUNT_MAX
#define GPIO_OUTPUT_COUNT_MAX 8
#endif

// <o>Input debounce timeout in ms <0-1000> <f.d>
#ifndef GPIO_DEBOUNCE_TIMEOUT_MS
#define GPIO_DEBOUNCE_TIMEOUT_MS 100
#endif

// <h>Pin configurations

#define GPIO_CONFIGURATION_PIN_MODE_DISABLED 0
#define GPIO_CONFIGURATION_PIN_MODE_INPUT 1
#define GPIO_CONFIGURATION_PIN_MODE_OUTPUT 2

{% for index in range(0, 32) %}

// <h>Pin {{ index }} configuration

// <o> Mode
// <0=> Disabled
// <1=> Input
// <2=> Output
#ifndef GPIO_CONFIGURATION_PIN_{{ index }}_MODE
#define GPIO_CONFIGURATION_PIN_{{ index }}_MODE 0
#endif

// <o> Default output (Only applies for output mode)
// <i> Only applies for output mode
// <0=> Low
// <1=> High
#ifndef GPIO_CONFIGURATION_PIN_{{ index }}_DEFAULT_OUTPUT
#define GPIO_CONFIGURATION_PIN_{{ index }}_DEFAULT_OUTPUT 0
#endif

// <o> Pull mode (Only applies for input mode)
// <i> Only applies for input mode
// <0=> Disabled
// <1=> Pullup
// <2=> Pulldown
#ifndef GPIO_CONFIGURATION_PIN_{{ index }}_PULL
#define GPIO_CONFIGURATION_PIN_{{ index }}_PULL 0
#endif

// <e>Invert input / output
#ifndef GPIO_CONFIGURATION_PIN_{{ index }}_INVERT
#define GPIO_CONFIGURATION_PIN_{{ index }}_INVERT 0
#endif
// </e>

// </h>

{% endfor %}

// </h>

// </h>

// <h>BLE Configuration

// <o>Fast advertisement interval (ms) <10-1000>
#ifndef ADVERTISEMENT_INTERVAL_FAST
#define ADVERTISEMENT_INTERVAL_FAST 100
#endif

// <o>Fast advertisement duration (s) <0-60>
#ifndef ADVERTISEMENT_TIMEOUT_FAST
#define ADVERTISEMENT_TIMEOUT_FAST 10
#endif

// <o>Slow advertisement interval (ms) <500-5000>
// <i>Set to 0 for infinite
#ifndef ADVERTISEMENT_INTERVAL_SLOW
#define ADVERTISEMENT_INTERVAL_SLOW 1000
#endif

// <o>Slow advertisement duration (s) <0-1440>
#ifndef ADVERTISEMENT_TIMEOUT_SLOW
#define ADVERTISEMENT_TIMEOUT_SLOW 0
#endif

// <s.13>Default device name
#ifndef DEVICE_NAME
#define DEVICE_NAME "BLEnky"
#endif 

// <e>BLE bonding enabled
#ifndef FEATURE_BLE_BONDING_ENABLED
#define FEATURE_BLE_BONDING_ENABLED 0
#endif

#if FEATURE_ENABLED(BLE_BONDING)
// <e>Static passkey enabled
#ifndef STATIC_PASSKEY_ENABLED
#define STATIC_PASSKEY_ENABLED 0
#endif
#if STATIC_PASSKEY_ENABLED == 1
// <s.6>Static passkey (6 digits)
#ifndef BLE_BONDIG_PASSKEY
#define BLE_BONDIG_PASSKEY "123456"
#endif
#endif
// </e>
#endif

// </e>

// </h>

// <h>Features configuration

// <e>Battery status profile enabled
#ifndef FEATURE_BATTERY_PROFILE_ENABLED
#define FEATURE_BATTERY_PROFILE_ENABLED 1
#endif
// </e>

// <e>Binary sensor profile enabled
#ifndef FEATURE_BINARY_SENSOR_ENABLED
#define FEATURE_BINARY_SENSOR_ENABLED 0
#endif

// <o> Binary sensor pin <0-31> <f.d>
#ifndef BINARY_SENSOR_PIN
#define BINARY_SENSOR_PIN 0
#endif
// </e>

// <e>Automation IO profile enabled
#ifndef FEATURE_AUTOMATION_IO_ENABLED
#define FEATURE_AUTOMATION_IO_ENABLED 1
#endif

// <e>Use a different UUID (2A57) for AIO output characteristics
#ifndef AUTOMATION_IO_DIFFERENT_UUIDS
#define AUTOMATION_IO_DIFFERENT_UUIDS 1
#endif
// </e>
// </e>

// <e>gpioASM profile and engine enabled
#ifndef FEATURE_GPIO_ASM_ENABLED
#define FEATURE_GPIO_ASM_ENABLED 1
#endif
// </e>

// <e>Cycling speed/cadence profile and engine enabled
#ifndef FEATURE_CYCLING_SPEED_CADENCE_ENABLED
#define FEATURE_CYCLING_SPEED_CADENCE_ENABLED 0
#endif

// <o> Wheel sensor pin <0-31> <f.d>
#ifndef CSC_WHEEL_SENSOR_PIN
#define CSC_WHEEL_SENSOR_PIN 0
#endif
// </e>

// <e>HID service enabled (experimental)
#ifndef FEATURE_HID_ENABLED
#define FEATURE_HID_ENABLED 0
#endif

#if FEATURE_ENABLED(HID)
#if ! FEATURE_ENABLED(BLE_BONDING)
#error BLE bonding needs to be enabled for HID to work
#endif
#endif

// <e> Gamepad enabled
#ifndef HID_GAMEPAD_ENABLED
#define HID_GAMEPAD_ENABLED 1
#endif

{% for direction in ['up', 'down', 'left', 'right'] %}
// <e> D-Pad {{ direction }} enabled
#ifndef HID_D_PAD_{{ direction | upper }}_ENABLED
#define HID_D_PAD_{{ direction | upper }}_ENABLED 0
#endif
// <o> D-Pad {{ direction }} pin <0-31> <f.d>
#ifndef HID_D_PAD_{{ direction | upper }}_PIN
#define HID_D_PAD_{{ direction | upper }}_PIN 0
#endif
// </e>
{% endfor %}

{% for button in ['A', 'B', 'Start', 'Select'] %}
// <e> {{ button }} button enabled
#ifndef HID_BUTTON_{{ button | upper }}_ENABLED
#define HID_BUTTON_{{ button | upper }}_ENABLED 0
#endif
// <o> {{ button }} button pin <0-31> <f.d>
#ifndef HID_BUTTON_{{ button | upper }}_PIN
#define HID_BUTTON_{{ button | upper }}_PIN 0
#endif
// </e>
{% endfor %}

// </e>

// </e>

// <e>Sleep mode enabled
#ifndef FEATURE_SLEEP_MODE_ENABLED
#define FEATURE_SLEEP_MODE_ENABLED 0
#endif

#if FEATURE_ENABLED(SLEEP_MODE)
//<o>Sleep mode
//<0=> Light sleep (RAM retention)
//<1=> Deep sleep (no RAM retention)
#ifndef SLEEP_MODE
#define SLEEP_MODE 0x1
#endif

//<o>Sleep timeout in minutes <0-180>
#ifndef SLEEP_TIMEOUT_MINUTES
#define SLEEP_TIMEOUT_MINUTES 5
#endif
#endif

//<e>Go to light sleep after graceful disconnect
#ifndef SLEEP_AFTER_DISCONNECT
#define SLEEP_AFTER_DISCONNECT 0
#endif
//</e>

// </e>

// </h>

// <<< end of configuration section >>>
#endif